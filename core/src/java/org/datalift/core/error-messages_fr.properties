# Error messages for DataLift core classes
# ============================================================================
#
configuration.not.found		= Fichier de configuration {0} non trouvé
configuration.missing.property	= \
	Donnée de configuration obligatoire absente\u00a0: {0}
configuration.load.error	= \
	Echec de chargement de la configuration DataLift\u00a0: {0}
#
resource.init.error		= \
	Erreur lors de l''initialisation de la ressource {0}\u00a0: {1}
resource.shutdown.error		= \
	Erreur lors de l''arrêt de la ressource {0}\u00a0: {1}
module.load.error		= \
	Erreur de chargement d'un module depuis {0}\u00a0: {1}
#
repository.missing.factory	= Aucune classe d'accès aux RDF stores trouvée
repository.invalid.url		= URL ({1}) invalide pour le RDF store "{0}"
repository.unknown.type		= \
	Type inconnu ou connexion impossible pour le RDF store "{0}" ({1})
repository.config.error		= Configuration du RDF store {0} invalide\u00a0: {1}
repository.connect.error	= Echec de connexion au RDF store "{0}" ({1})\u00a0: {2}
#
local.path.creation.failed	= \
	Echec de création du répertoire de stockage local {0}
local.path.not.directory	= \
	Le stockage local configuré ({0}) n'est pas un répertoire ou n'est pas accessible
public.storage.not.directory	= \
	Le stockage public configuré ({0}) n'est pas un répertoire ou n'est pas accessible
#
invalid.file.type		= \
	Le chemin {0} ne pointe ni vers un fichier ni vers un répertoire
file.not.found			= Fichier non trouvé\u00a0: {0}
file.read.error			= Erreur d''accès au fichier source: {0} ({1})
#
invalid.jdbc.url		= URL JDBC invalide\u00a0: {0}
jdbc.driver.not.found		= \
	Driver JDBC driver non trouvé ou de type inconnu pour {0}
#
rdf.store.access.error		= \
	Erreur technique rencontrée lors d'un accès au RDF store
duplicate.identifier		= \
	Une entrée avec le même nom ("{0}") existe déjà
inconsistent.object.class	= L''objet "{0}" n'est pas une instance de {1}
#
invalid.endpoint.url		= URL du SPARQL endpoint invalide\u00a0: {0}
endpoint.access.error		= \
	Erreur d''accès au SPARQL endpoint ({0})\u00a0: statut HTTP={1}, réponse={2}
endpoint.response.error		= \
	Données RDF invalides reçues du SPARQL endpoint\u00a0: {0}
rdf.parse.error			= Echec de lecture des données RDF\u00a0: {0}
#