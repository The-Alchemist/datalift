<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
#load("workspace/resources")
#load_core_resources
	<title>$!esc.html($it.title) - #i18n("source.grid.title") - DataLift</title>
#css_links
</head>
<body>
#banner
	<p>#i18n("source.grid.desc") $!esc.html($it.title)</p>
	<table id="grid">
		<thead>
			<tr>
				<th class="dl-grid-header-column">#i18n("sparql.subject")</th>
				<th class="dl-grid-header-column">#i18n("sparql.predicate")</th>
				<th class="dl-grid-header-column">#i18n("sparql.object")</th>
			</tr>
		</thead>
		<tbody>
#foreach( $item in $it )
			<tr>
				<td>$!esc.html($item.subject)</td>
				<td>$!esc.html($item.predicate)</td>
				<td>$!esc.html($item.object)</td>
			</tr>
#end
		</tbody>
	</table>
	<div id="pagernav"></div>
	<div id="searchnav" style="display:none">
		#i18n("grid.search.value.label") <input type="search" id="gridsearch" placeholder="#i18n("grid.search.value.placeholder")" results="0" class="gridsearch" />
		#i18n("grid.search.column.label") <select id="searchColumn">
			<option value="all">#i18n("grid.search.column.option.all")</option>
			<option>#i18n("sparql.subject")</option>
			<option>#i18n("sparql.predicate")</option>
			<option>#i18n("sparql.object")</option>
		</select>
	</div>

#script_links
	<script type="text/javascript">
		var gridData = new Array();
		var searchData = new Array();
		var gridHeader = new Array();

		$(function() {
			getHeaderColumns();
			jQuery.extend(jQuery.jgrid.defaults, {
				caption: $('#searchnav').html(),
				rowNum: 1000000,
				height: 450,
				search:{
					caption: "#i18n("grid.search.value.label")"
				}
			});
			tableToGrid("#grid", { datatype: "local" });
			$("#grid").trigger("reloadGrid");

			gridData = $("#grid").getRowData();
			// Function called when modifying search text
			$("#gridsearch").keyup(function () {
				gridSearch($(this).val().toLowerCase());
			});
			// Function called when modifying search Column
			$("#searchColumn").change(function() {
				gridSearch($("#gridsearch").val().toLowerCase());
			});
		});

		function getHeaderColumns() {
			var cols = $(".dl-grid-header-column");
			for (var i = 0; cols[i]; i++) {
				gridHeader[i] = normalizeHeaderName(cols[i].innerHTML);
			}
		}

		function normalizeHeaderName(colTitle) {
			return colTitle.replace(/ /g, "_")
			               .replace(/&/g, "&amp;")
			               .replace(/</g, "&lt;")
			               .replace(/>/g, "&gt;");
		}

		function gridSearch(searchString) {
			searchData = [];
			if ($("#searchColumn").val() == "all") {
				searchAllColumns(searchString);
			}
			else {
				searchOneColumn(searchString, $("#searchColumn").val());
			}
			$("#grid").jqGrid('clearGridData', true);
			$("#grid").jqGrid('setGridParam',{data:searchData}).trigger("reloadGrid");

		}

		function searchAllColumns(searchString) {
			if (searchString != "") {
				var c = 0;
				var obj = gridHeader;
				for (var i = 0; i < gridData.length; i++) {
					for (var k = 0; k < obj.length; k++) {
						var toCmp = gridData[i][obj[k]];
						if ((toCmp != undefined) && (toCmp.toLowerCase().indexOf(searchString) != -1)) {
							searchData[c] = gridData[i];
							c++;
							k = obj.length;
						}
					}
				}
			}
			else searchData = gridData;
		}

		function searchOneColumn(searchString, searchColumn) {
			if (searchString != "") {
				var p = normalizeHeaderName(searchColumn);
				var c = 0;
				for (var i = 0; i < gridData.length; i++) {
					var toCmp = gridData[i][p];
					if ((toCmp != undefined) && (toCmp.toLowerCase().indexOf(searchString) != -1)) {
						searchData[c] = gridData[i];
						c++;
					}
				}
			}
			else searchData = gridData;
		}
	</script>
</body>
</html>
