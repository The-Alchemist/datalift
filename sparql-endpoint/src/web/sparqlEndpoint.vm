#load("sparql/resources")
#load_core_resources
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title>SPARQL Endpoint - DataLift</title>
#header_links
</head>
<body>
#banner
	<script>
		var rowNumber = 10;
		var grid = false;
		var searchData = new Array();
		var responsePtr;
		
		$(function() {
			
			$("#result-format").buttonset();
			$("#query_submit").button();
			$("#query_form").submit(function(e){
				//var requestMin = 0;
				//var requestMax = 500000;
#if( ${securityCtx.isAuthenticated()} )
				var requestUrl = $("#query_form").attr("action")
							+ "?" + $("#query").serialize()
							+ "&" + $("#default-graph-uri").serialize()
							//+ "&min=" + requestMin + "&max=" + requestMax
							+ "&grid=true";
#else
				var requestUrl = $("#query_form").attr("action")
							+ "?" + $("#query").serialize()							
							+ "&grid=true";
#end
				e.preventDefault(); // Prevent the navigator from sending the form
				jQuery.ajax({
					beforeSend: function(req) {
						req.setRequestHeader("Accept", $("input[name=format]:checked").val());
						$("#format_save").val($("input[name=format]:checked").val());
					},
					type: "GET",
					cache: false,
					url: requestUrl,
					success: successfulQuery,
					error: unsuccessfulQuery,
				});
			});
		});
	
		function successfulQuery(response){
			if ($("#format_save").val() == "application/json") {
				jsonGridSuccessRequest(response);
			}
			// Function called when modifying search text
			$("#gridsearch").keyup(function () {
				gridSearch(response, $(this).val().toLowerCase());
			});
			
			// Function called when modifying search Column
			$("#searchColumn").change(function() {
				gridSearch(response, $("#gridsearch").val().toLowerCase());
			});
		}

		function jsonGridSuccessRequest(response) {
			if (responsePtr) {
				delete responsePtr;
			}
			responsePtr = response;
			// initialize search select
			var options = $('#searchColumn').attr('options');
			options.length = 0;			
			options[options.length] = new Option("#i18n("sparql.search.all_columns")", "#i18n("sparql.search.all_columns")", true, true);
			// generating Column Model for jqGrid
			var myColModel = [];						
			for (var i = 0; i < response.head.length; i++ ) {
				myColModel[i] = [];					
				myColModel[i].name = response.head[i];
				// add row to search select
				options[options.length] = new Option(response.head[i], response.head[i], false, false);
			}
			if (grid == false ) {
				// initializing empty table in result div
				$("#table_results").GridUnload();
				$("#results").empty();
				$("#results").append('<table id="table_results"></table><div id="pagernav"/>');
							
				// initializing jqGrid
				$("#table_results").jqGrid({
					datatype: "local",
					colNames: response.head,
					colModel: myColModel,
					pager: $('#pagernav'),
					data: response.rows,
					caption: $("#searchnav").html(),
					rowNum: 50,
					rowList: [50,100,200,500],
					search: {
                                            caption: "#i18n("sparql.search.title")"
                                        }
		
				});
				
				$("#results").show();
				$("#table_results").setGridWidth($("#results").width());
				grid = true;
			}
			else {
				$("#table_results").clearGridData();
				$("#table_results").setGridParam({
					colNames: response.head,
					colModel: myColModel,
					data: response.rows,
				});
				$("#table_results").trigger("reloadGrid");
			}
		}
		
		function unsuccessfulQuery(XMLHttpRequest, strError){
			alert("#i18n("sparql.ajax.query.requesterror")\n[" 
				+ XMLHttpRequest.readyState + "]["
				+ XMLHttpRequest.status + "]"
				+ "\n#i18n("sparql.ajax.query.invalidQuery")#i18n("sparql.ajax.query.error") ["
				+ strError+ "]");
		}		
		
		function gridSearch(gridData, searchString) {
			searchData = [];
			if ($("#searchColumn").val() == "all") {
				searchAllColumns(gridData, searchString);
			}
			else {
				searchOneColumn(gridData, searchString, $("#searchColumn").val());
			}
			$("#table_results").jqGrid('clearGridData', true);
			$("#table_results").jqGrid('setGridParam',{data:searchData}).trigger("reloadGrid");
		}		

		function searchAllColumns(gridData, searchString) {
			var c = 0;
			for (var i = 0; i < gridData.rows.length; i++) {
				for (var k = 0; k < gridData.head.length; k++) {
					var toCmp = eval("gridData.rows[i]." + gridData.head[k]);
					if (toCmp.toLowerCase().indexOf(searchString) != -1) {
						searchData[c] = gridData.rows[i];
						c++;
						k = gridData.head.length;
					}
				}
			}
		}
		
		function searchOneColumn(gridData, searchString, searchColumn) {
			var c = 0;
			for (var i = 0; i < gridData.rows.length; i++) {
				var toCmp = eval("gridData.rows[i]." + searchColumn);
				if (toCmp.toLowerCase().indexOf(searchString) != -1) {
					searchData[c] = gridData.rows[i];
					c++;
				}
			}
		}
	</script>

	<div id="content" class="ui-widget-content dl-main-panel">
	  <h3 class="ui-widget-header dl-widget-header">#i18n("sparql.query.full")</h3>
		<div class="dl-panel">
		    <form id="query_form" action="${baseUri}/sparql" method="get">
#if( ${securityCtx.isAuthenticated()} )
			<div class="dl-form-elt">
			  <label for="default-graph-uri">#i18n("sparql.repository") </label>		
			  <select id="default-graph-uri" name="default-graph-uri">
#foreach( $item in $it )
#if( $foreach.count == 1 )
					<option value="$esc.html($!{item.name})" selected="true">#i18n($!{item.label})</option>
#else
					<option value="$esc.html($!{item.name})">#i18n($!{item.label})</option>
#end
#end
				</select>
			</div>
#end
			<div id="result-format" class="dl-form-elt">
				<label>#i18n("sparql.parameter.format")</label>
				<input type="radio" id="html_format" name="format" value="application/json" checked="checked"/><label for="html_format">HTML</label>
				<input type="radio" id="rdf_format" name="format" value="application/rdf+xml"/><label for="rdf_format">RDF/XML</label>
				<input type="radio" id="turtle_format" name="format" value="text/turtle"/><label for="turtle_format">Turtle</label>
				<input type="hidden" id="format_save" />
			</div>
			<div class="dl-form-elt">
				<label for="query">#i18n("sparql.query.light")</label><br />
				<textarea id="query" name="query" style="width:600px; height:150px;">$esc.html("SELECT * WHERE {
  ?s ?p ?o .
}
")</textarea>
			</div>
			<div class="dl-form-buttons">
				<input type="submit" value="#i18n("sparql.query.execute")" id="query_submit" />
			</div>
		    </form>
	    	</div>
		<div id="results" class="dl-result-panel">
		</div>
		<div id="searchnav" style="display:none">
			#i18n("sparql.search.column") <select id="searchColumn"></select>
			#i18n("sparql.search.title") <input type="search" id="gridsearch" placeholder="" results="0" class="gridsearch" />
		</div>
	</div>
#footer
</body>
</html>
